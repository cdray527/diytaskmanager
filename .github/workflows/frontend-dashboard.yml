name: DIYTASKMANAGER Frontend Dashboard Module CICD

on:
    push:
        branches:
            - main
        paths:
            - 'apps/frontend/dashboard/**'
            - 'apps/frontend/dashboard-e2e/**'
            - 'libs/frontend/**'

jobs:
    build-and-push:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v2
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ vars.AWS_REGION }}

            - name: Log in to Amazon ECR
              run: |
                  aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_FE_DASHBOARD }}

            - name: Build and Push FE-DASHBOARD Image
              run: |
                  docker build -t diytaskmanager-api -f Dockerfile.prod .
                  docker tag diytaskmanager-api:latest ${{ secrets.AWS_ECR_FE_DASHBOARD }}:latest
                  docker push ${{ secrets.AWS_ECR_FE_DASHBOARD }}:latest

    # deploy:
    #     needs: build-and-push
    #     runs-on: ubuntu-latest

    #     steps:
    #         - name: Setup SSH Key
    #           run: |
    #               echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
    #               chmod 600 key.pem

    #         - name: Deploy to EC2
    #           run: |
    #               ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
    #                 # Cleanup all dangling image
    #                 docker system prune -af

    #                 # Direct to config
    #                 cd diytaskmanager/dockerconfig

    #                 # Log in to AWS ECR
    #                 aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_DIYCICD }}

    #                 # Pull the latest backend image
    #                 docker pull ${{ secrets.AWS_ECR_FE_DASHBOARD }}:latest

    #                 # Restart only backend services without affecting other services
    #                 docker-compose -f docker-compose.prod.yml up -d --force-recreate diytaskmanager-api
    #               EOF
